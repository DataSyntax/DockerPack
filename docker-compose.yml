version: "3"
services:

  nginxproxy:
    build:
      context: images/nginx-proxy
    image: datasyntax/nginx-proxy
    container_name: vhost-proxy
    restart: always
    networks:
      projects:
        aliases:
          - nginxproxy.docker
    dns:
      - 8.8.8.8
      - 8.8.4.4
    ports:
      - "${HOST_IP}:${PROXY_HTTP_PORT:-80}:80"
      - "${HOST_IP}:${PROXY_HTTPS_PORT:-443}:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - certificates:/etc/nginx/certs

  dns:
    image: andyshinn/dnsmasq
    container_name: dns
    restart: always
    networks:
      projects:
        aliases:
          - dns.docker
    dns:
      - 8.8.8.8
      - 8.8.4.4
    ports:
      - "${HOST_IP}:53:53/udp"
    command: -S /docker/127.0.0.11 -A /proofpilot.tk/127.0.0.1  -A /fotovakschool.tk/127.0.0.1 -A /dutchfilmersacademy.tk/127.0.0.1
    cap_add:
      - NET_ADMIN

  dummy:
    build:
      context: images/maintenance
    image: datasyntax/maintenance
    container_name: dummy
    restart: always
    networks:
      projects:
        aliases:
          - dummy.docker
    environment:
      - MESSAGE="some custom message"
      - PORT=80
      - VIRTUAL_HOST=${MAINTENANCE_DOMAINS}

  openvpn:
    build:
     context: images/openvpn
    image: datasyntax/openvpn
    container_name: openvpn
    restart: always
    networks:
      projects:
        aliases:
          - openvpn.docker
    command: /usr/bin/run.sh
    ports:
       - "${HOST_IP}:1194:1194"
    cap_add:
       - NET_ADMIN
    volumes:
       - ./openvpn/config:/etc/openvpn
       - ./openvpn/out:/tmp/out

volumes:
  certificates:

networks:
  projects:
    external: true

